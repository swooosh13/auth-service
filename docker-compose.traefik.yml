version: '3.9'

services:
  authapp:
    container_name: authapp
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=stage
    depends_on:
      - mongodb
    networks:
      - auth_network
      - proxy

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.authapp-secure.entrypoints=websecure"
      - "traefik.http.routers.authapp-secure.rule=Host(`authapp.$TRAEFIK_URL`)"
      - "traefik.http.routers.authapp-secure.service=authapp"
      - "traefik.http.services.authapp.loadbalancer.server.port=8000"

  mongodb:
    container_name: mongo
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadm
      - MONGO_INITDB_ROOT_PASSWORD=mongoadm
    ports:
      - "27017:27017"
    volumes:
      - ./init.js:/docker-entrypoint-initdb.d/init.js:ro
      - ./.dbdata/db:/data/db
    networks:
      - auth_network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.tcp.routers.mongo-secure.entrypoints=mongo"
      - "traefik.tcp.routers.mongo-secure.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mongo-secure.tls=false"
      - "traefik.http.routers.mongo-secure.service=mongodb"
      - "traefik.http.services.mongodb.loadbalancer.server.port=27017"

networks:
  proxy:
    external: true
  auth_network:
    driver: bridge